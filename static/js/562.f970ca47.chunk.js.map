{"version":3,"file":"static/js/562.f970ca47.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/Cast/Cast.module.css?538b","Cast/Cast.js","webpack://goit-react-hw-05-movies/./src/MovieDetails/MovieDetails.module.css?d51b","MovieDetails/MovieDetails.js","webpack://goit-react-hw-05-movies/./src/Review/Review.module.css?8d90","Review/Review.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Cast_container__K22qH\",\"list\":\"Cast_list__EOB7N\",\"cast-item\":\"Cast_cast-item__0twuQ\",\"actor-image\":\"Cast_actor-image__ePuHo\",\"actor-name\":\"Cast_actor-name__ScZoZ\"};","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport styles from './Cast.module.css';\n\nconst API_KEY = '1fe8270af09b2a2e2b930e18d767076b';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n      )\n      .then(response => {\n        setCast(response.data.cast);\n      })\n      .catch(error => {\n        console.error('Error fetching cast:', error);\n      });\n  }, [movieId]);\n\n  return (\n    <div className={styles.container}>\n      <ul className={styles.list}>\n        {cast.map(actor => (\n          <li key={actor.id} className={styles.item}>\n            <img\n              src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n              alt={actor.name}\n              className={styles['actor-image']}\n            />\n            <p className={styles['actor-name']}>{actor.name}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape(\n      {\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      }.isRequired\n    )\n  ),\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"movie-details\":\"MovieDetails_movie-details__IH1Mu\",\"movie-details-content\":\"MovieDetails_movie-details-content__XqaQp\",\"movie-details-image\":\"MovieDetails_movie-details-image__JEqvn\",\"movie-info\":\"MovieDetails_movie-info__3oPgW\"};","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport { useParams } from 'react-router-dom';\nimport Cast from 'Cast/Cast';\nimport Review from 'Review/Review';\nimport styles from './MovieDetails.module.css';\n\nconst API_KEY = '1fe8270af09b2a2e2b930e18d767076b';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const [showCast, setShowCast] = useState(false);\n  const [showReview, setShowReview] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`)\n      .then(response => {\n        setMovieDetails(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching movie details:', error);\n      });\n  }, [movieId]);\n\n  const toggleCast = () => {\n    setShowCast(!showCast);\n  };\n\n  const toggleReview = () => {\n    setShowReview(!showReview);\n  };\n\n  return (\n    <div>\n      <div className={styles['movie-details']}>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`}\n          alt={movieDetails.title}\n          className={styles['movie-details-image']}\n        />\n        <div className={styles['movie-details-content']}>\n          <div className={styles['movie-title']}>{movieDetails.title}</div>\n          <div className={styles['movie-info']}>\n            <p className={styles['movie-rating']}>\n              Rating: {movieDetails.vote_average}\n            </p>\n            <p className={styles['movie-genre']}>\n              Genre:{' '}\n              {movieDetails.genres &&\n                movieDetails.genres.map(genre => genre.name).join(', ')}\n            </p>\n          </div>\n          <div className={styles['movie-overview']}>\n            {movieDetails.overview}\n          </div>\n        </div>\n      </div>\n      <div className={styles['additional-info']}>\n        <h2>Additional information</h2>\n        <div>\n          <h3 onClick={toggleCast} className={styles['additional-info-title']}>\n            Cast\n          </h3>\n          {showCast && <Cast movieId={movieId} />}\n        </div>\n        <div>\n          <h3\n            onClick={toggleReview}\n            className={styles['additional-info-title']}\n          >\n            Review\n          </h3>\n          {showReview && <Review movieId={movieId} />}\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default MovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"movie-details\":\"Review_movie-details__-ra-V\",\"movie-details-content\":\"Review_movie-details-content__JPj7C\",\"movie-details-image\":\"Review_movie-details-image__BkKiM\",\"movie-title\":\"Review_movie-title__Q+jwy\",\"movie-overview\":\"Review_movie-overview__S-qSB\",\"additional-info\":\"Review_additional-info__9R-UQ\"};","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport styles from './Review.module.css';\n\nconst API_KEY = '1fe8270af09b2a2e2b930e18d767076b';\n\nfunction Review() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n      )\n      .then(response => {\n        setReviews(response.data.results);\n      })\n      .catch(error => {\n        console.error('Error fetching reviews:', error);\n      });\n  }, [movieId]);\n\n  return (\n    <div className={styles['review-container']}>\n      {reviews.length === 0 ? (\n        <p>Sorry,but we don't have any reviews for this movie.</p>\n      ) : (\n        <ul className={styles['review-list']}>\n          {reviews.map(review => (\n            <li key={review.id} className={styles['review-item']}>\n              <h3 className={styles['author']}>{review.author}</h3>\n              <p className={styles['content']}>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nReview.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape(\n      {\n        id: PropTypes.string.isRequired,\n        author: PropTypes.string.isRequired,\n        content: PropTypes.string.isRequired,\n      }.isRequired\n    )\n  ),\n};\n\nexport default Review;\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","axios","then","response","data","catch","error","console","className","styles","map","actor","src","profile_path","alt","name","id","movieDetails","setMovieDetails","showCast","setShowCast","showReview","setShowReview","poster_path","title","vote_average","genres","genre","join","overview","onClick","Cast","Review","reviews","setReviews","results","length","review","author","content"],"sourceRoot":""}