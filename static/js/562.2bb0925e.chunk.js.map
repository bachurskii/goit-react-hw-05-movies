{"version":3,"file":"static/js/562.2bb0925e.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/Cast/Cast.module.css?538b","Cast/Cast.js","webpack://goit-react-hw-05-movies/./src/MovieDetails/MovieDetails.module.css?d51b","MovieDetails/MovieDetails.js","webpack://goit-react-hw-05-movies/./src/Review/Review.module.css?8d90","Review/Review.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Cast_container__K22qH\",\"list\":\"Cast_list__EOB7N\",\"cast_item\":\"Cast_cast_item__X69aV\",\"actor_image\":\"Cast_actor_image__XELUX\",\"actor_name\":\"Cast_actor_name__iKhiW\"};","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport styles from './Cast.module.css';\n\nconst API_KEY = '1fe8270af09b2a2e2b930e18d767076b';\n\nfunction Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n      )\n      .then(response => {\n        setCast(response.data.cast);\n      })\n      .catch(error => {\n        console.error('Error fetching cast:', error);\n      });\n  }, [movieId]);\n\n  return (\n    <div className={styles.container}>\n      <ul className={styles.list}>\n        {cast.map(actor => (\n          <li key={actor.id} className={styles.item}>\n            <img\n              src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n              alt={actor.name}\n              className={styles.actor_image}\n            />\n            <p className={styles.actor_name}>{actor.name}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape(\n      {\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      }.isRequired\n    )\n  ),\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"movie_details\":\"MovieDetails_movie_details__XPX9G\",\"movie_details_content\":\"MovieDetails_movie_details_content__iEs6W\",\"movie_details_image\":\"MovieDetails_movie_details_image__efNOl\",\"movie_info\":\"MovieDetails_movie_info__MfxXl\",\"goBackLink\":\"MovieDetails_goBackLink__ahSrr\"};","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useParams, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './MovieDetails.module.css';\nimport Cast from '../Cast/Cast';\nimport Review from '../Review/Review';\n\nconst API_KEY = '1fe8270af09b2a2e2b930e18d767076b';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [movieDetails, setMovieDetails] = useState({});\n  const [showCast, setShowCast] = useState(false);\n  const [showReview, setShowReview] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`)\n      .then(response => {\n        setMovieDetails(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching movie details:', error);\n      });\n  }, [movieId]);\n\n  const toggleCast = () => {\n    setShowCast(!showCast);\n  };\n\n  const toggleReview = () => {\n    setShowReview(!showReview);\n  };\n\n  return (\n    <div>\n      <div className={styles.movie_details}>\n        <Link to={location.state?.from || '/'} className={styles.goBackLink}>\n          Go back\n        </Link>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`}\n          alt={movieDetails.title}\n          className={styles.movie_details_image}\n        />\n        <div className={styles.movie_details_content}>\n          <div className={styles.movie_title}>{movieDetails.title}</div>\n          <div className={styles.movie_info}>\n            <p className={styles.movie_rating}>\n              Rating: {movieDetails.vote_average}\n            </p>\n            <p className={styles.movie_genre}>\n              Genre:{' '}\n              {movieDetails.genres &&\n                movieDetails.genres.map(genre => genre.name).join(', ')}\n            </p>\n          </div>\n          <div className={styles.movie_overview}>{movieDetails.overview}</div>\n        </div>\n      </div>\n      <div className={styles.additional_info}>\n        <h2>Additional information</h2>\n        <div>\n          <Link to={`/movies/${movieId}/cast`} onClick={toggleCast}>\n            Cast\n          </Link>\n          {showCast && <Cast movieId={movieId} />}\n        </div>\n        <div>\n          <Link to={`/movies/${movieId}/reviews`} onClick={toggleReview}>\n            Reviews\n          </Link>\n          {showReview && <Review movieId={movieId} />}\n        </div>\n      </div>\n      <Routes>\n        <Route path=\"/movies/:movieId/*\" element={<Cast />} />\n        <Route path=\"/movies/:movieId/reviews/*\" element={<Review />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default MovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"movie_details\":\"Review_movie_details__gSuXI\",\"movie_details_content\":\"Review_movie_details_content__8iZr-\",\"movie_details_image\":\"Review_movie_details_image__vU91R\",\"movie_title\":\"Review_movie_title__mhDJz\",\"movie_overview\":\"Review_movie_overview__ecKrs\",\"additional_info\":\"Review_additional_info__Ok4R5\"};","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport styles from './Review.module.css';\n\nconst API_KEY = '1fe8270af09b2a2e2b930e18d767076b';\n\nfunction Review() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`\n      )\n      .then(response => {\n        setReviews(response.data.results);\n      })\n      .catch(error => {\n        console.error('Error fetching reviews:', error);\n      });\n  }, [movieId]);\n\n  return (\n    <div className={styles.review_container}>\n      {reviews.length === 0 ? (\n        <p>Sorry,but we don't have any reviews for this movie.</p>\n      ) : (\n        <ul className={styles.review_list}>\n          {reviews.map(review => (\n            <li key={review.id} className={styles.review_item}>\n              <h3 className={styles.author}>{review.author}</h3>\n              <p className={styles.content}>{review.content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nReview.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape(\n      {\n        id: PropTypes.string.isRequired,\n        author: PropTypes.string.isRequired,\n        content: PropTypes.string.isRequired,\n      }.isRequired\n    )\n  ),\n};\n\nexport default Review;\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","axios","then","response","data","catch","error","console","className","styles","map","actor","src","profile_path","alt","name","id","location","useLocation","movieDetails","setMovieDetails","showCast","setShowCast","showReview","setShowReview","to","state","from","poster_path","title","vote_average","genres","genre","join","overview","onClick","Cast","Review","path","element","reviews","setReviews","results","length","review","author","content"],"sourceRoot":""}