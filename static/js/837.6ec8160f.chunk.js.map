{"version":3,"file":"static/js/837.6ec8160f.chunk.js","mappings":"mOACA,GAAgB,WAAa,0BAA0B,WAAa,0BAA0B,YAAc,2BAA2B,UAAY,yBAAyB,aAAe,4BAA4B,YAAc,2BAA2B,aAAe,6B,SC6F/Q,MAxFA,WACE,OAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAIjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBAAgBJ,EAASK,QAAQC,IAAI,SACxDH,IACFV,EAAcU,GACdI,EAAaJ,GAEhB,GAAE,CAACH,EAASK,SAEb,IAAME,EAAe,SAAAC,GACnBC,EAAAA,EAAAA,IAAA,4DAXc,mCAWd,kBAE0ED,IAEvEE,MAAK,SAAAC,GACJhB,EAAUgB,EAASC,KAAKC,SACxBhB,GAAY,EACb,IACAiB,OAAM,SAAAC,GACLC,QAAQD,MAAM,0BAA2BA,EAC1C,GACJ,EAgBD,OACE,iBAAKE,UAAWC,EAAAA,eAAhB,WACE,eAAID,UAAWC,EAAAA,aAAf,4BACA,kBAAMD,UAAWC,EAAAA,YAAoBC,SAZd,SAAAC,GACzBA,EAAMC,iBACF7B,IACFC,EAAcD,GACde,EAAaf,GACbM,EAAS,iBAAD,OAAkBN,IAE7B,EAKG,WACE,kBACE8B,KAAK,OACLC,YAAY,wBACZC,MAAOhC,EACPiC,SAtBmB,SAAAL,GACzB,IAAMI,EAAQJ,EAAMM,OAAOF,MAC3B/B,EAAc+B,EACf,EAoBOP,UAAWC,EAAAA,gBAEb,mBAAQI,KAAK,SAAb,uBAED1B,GAA8B,IAAlBF,EAAOiC,SAAgB,4CACnCjC,EAAOiC,OAAS,IACf,eAAIV,UAAWC,EAAAA,WAAf,SACGxB,EAAOkC,KAAI,SAAAC,GAAK,OACf,eAAmBZ,UAAWC,EAAAA,UAA9B,UACE,SAAC,KAAD,CACEY,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAMjC,GACfiB,UAAWC,EAAAA,WAHb,SAKGW,EAAMK,SANFL,EAAME,GADA,QAe1B,C","sources":["webpack://goit-react-hw-05-movies/./src/Movie/Movie.module.css?fc7f","Movie/Movie.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie_list\":\"Movie_movie_list__OIQ-j\",\"movie_card\":\"Movie_movie_card__jtgdY\",\"movie_title\":\"Movie_movie_title__ZbwIB\",\"movieItem\":\"Movie_movieItem__XTDhg\",\"title_movies\":\"Movie_title_movies__MT4Ch\",\"form_movies\":\"Movie_form_movies__h5Evg\",\"search_input\":\"Movie_search_input__YXi+C\"};","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport styles from './Movie.module.css';\n\nfunction Movies() {\n  const [searchText, setSearchText] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searched, setSearched] = useState(false);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const API_KEY = '1fe8270af09b2a2e2b930e18d767076b';\n\n  useEffect(() => {\n    const queryParam = new URLSearchParams(location.search).get('query');\n    if (queryParam) {\n      setSearchText(queryParam);\n      searchMovies(queryParam);\n    }\n  }, [location.search]);\n\n  const searchMovies = query => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`\n      )\n      .then(response => {\n        setMovies(response.data.results);\n        setSearched(true);\n      })\n      .catch(error => {\n        console.error('Error searching movies:', error);\n      });\n  };\n\n  const handleSearchChange = event => {\n    const value = event.target.value;\n    setSearchText(value);\n  };\n\n  const handleSearchSubmit = event => {\n    event.preventDefault();\n    if (searchText) {\n      setSearchText(searchText);\n      searchMovies(searchText);\n      navigate(`/movies?query=${searchText}`);\n    }\n  };\n\n  return (\n    <div className={styles.movieContainer}>\n      <h1 className={styles.title_movies}>Search Movies</h1>\n      <form className={styles.form_movies} onSubmit={handleSearchSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Search for a movie...\"\n          value={searchText}\n          onChange={handleSearchChange}\n          className={styles.search_input}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {searched && movies.length === 0 && <p>No movies found.</p>}\n      {movies.length > 0 && (\n        <ul className={styles.movie_list}>\n          {movies.map(movie => (\n            <li key={movie.id} className={styles.movieItem}>\n              <Link\n                to={`/movies/${movie.id}`}\n                state={{ from: location }}\n                className={styles.movie_link}\n              >\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ),\n};\n\nexport default Movies;\n"],"names":["useState","searchText","setSearchText","movies","setMovies","searched","setSearched","navigate","useNavigate","location","useLocation","useEffect","queryParam","URLSearchParams","search","get","searchMovies","query","axios","then","response","data","results","catch","error","console","className","styles","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","length","map","movie","to","id","state","from","title"],"sourceRoot":""}